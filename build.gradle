apply plugin: 'java'
apply plugin: 'jetty'
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.spring.dependency-management'

mainClassName = 'com.easyaccounting.application.AppServer'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.1',
                  'com.google.guava:guava:19.0',
                  'com.netflix.nebula:gradle-ospackage-plugin:2.2.0',
				  'io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE',
				  'com.twilio.sdk:twilio:7.31.0'
    }
}

shadowJar {
    baseName = 'futuremaker'
    classifier = ''
    version = ''
    manifest {
        attributes 'Main-Class': mainClassName
    }
    mergeServiceFiles()
	
}

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    swagger
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.504'
    }
}

dependencies {
    compile(
            'io.dropwizard:dropwizard-core:1.0.2',
            'io.dropwizard:dropwizard-client:1.0.2',
            'io.dropwizard:dropwizard-forms:1.0.2',
            'io.dropwizard:dropwizard-assets:1.0.2',
            'io.dropwizard:dropwizard-auth:0.8.0',
            'com.google.inject:guice:4.0',
            'org.mongodb:mongo-java-driver:2.13.0',
            'org.jongo:jongo:1.3.0',
			'org.apache.commons:commons-collections4:4.1',
			'javax.persistence:persistence-api:1.0',
			'org.apache.tika:tika-parsers:1.13',
			'org.elasticsearch:elasticsearch:2.4.4',
			'com.sun.mail:javax.mail:1.5.5',
			'org.apache.httpcomponents:httpclient:4.5.2',
			'javax.faces:javax.faces-api:2.2',
			'org.apache.poi:poi:3.16',
			'com.instamojo:instamojo-java:1.0.1',
            'com.amazonaws:aws-java-sdk-s3'
            
    )

    testCompile(
            'junit:junit:4.11',
            'info.cukes:cucumber-core:1.2.0',
            'info.cukes:cucumber-java:1.2.0',
            'info.cukes:cucumber-junit:1.2.0',
            'com.jayway.restassured:rest-assured:2.4.0',
            'org.mockito:mockito-all:1.10.19',
            'ie.corballis:json-fixtures-lib:1.0.4',
			'io.dropwizard:dropwizard-testing:1.0.0-rc2',
			'com.github.fakemongo:fongo:1.3.4',
			'org.glassfish.tyrus:tyrus-container-grizzly:1.2'
    )

    swagger(
            'com.wordnik:swagger-codegen:2.1.2-M1',
            'org.slf4j:slf4j-nop:1.7.10'
    )
}

apply plugin: 'os-package'
ospackage {
    packageName = 'future-maker'
    version = '0.1.0'
    release = 1
    os = LINUX
    arch = NOARCH
    type = BINARY

    preInstall = file('src/deployment/pkg/rpm/before-install.sh')
    postInstall = file('src/deployment/pkg/rpm/after-install.sh')
    postUninstall = file('src/deployment/pkg/rpm/after-remove.sh')

    from('build/libs') {
        include "futuremaker.jar"
        fileMode = 0644
        user 'root'
        permissionGroup 'root'
        into '/opt/future-maker/lib'
    }

    from('src/main/bash') {
        include "future-maker.init.sh"
        rename { String fileName ->
            fileName.replace(".init.sh", '')
        }
        fileMode = 0755
        user 'root'
        permissionGroup 'root'
        into '/etc/init.d'
    }

    from('src/deployment/pkg') {
        include "future-maker-rpm.yml"
        rename { String fileName ->
            fileName.replace("-rpm", '-configuration')
        }
        fileMode = 0644
        user 'root'
        permissionGroup 'root'
        into '/etc/future-maker'
    }
}

def cucumber(task) {
    task.dependsOn { 'shadowJar' }
}
cucumber(test)

    task(swaggergen, type: JavaExec) {
    classpath configurations.swagger
    main 'com.wordnik.swagger.codegen.Codegen'
    args '-i', 'src/main/resources/api-docs/swagger.yaml',
            '-l', 'swagger',
            '-o', "${processResources.destinationDir}/assets/api-docs"
    standardOutput com.google.common.io.ByteStreams.nullOutputStream()
}

processResources.doLast {
    project.swaggergen.execute()
}

buildRpm {
    dependsOn { 'shadowJar' }
}
